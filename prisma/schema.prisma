// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userId   String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  address  String
  orders   Orders[]
  cart     Cart     @relation(fields: [CartId], references: [cartId])
  CartId   String   @unique
}

model Products {
  productId     String           @id @default(uuid())
  name          String
  description   String
  price         Float
  stock         Int              @default(0)
  cart          Cart[]
  order         Orders[]
  CartToProduct cartAndProduct[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
} 

model Orders {
  orderId   String     @id @default(uuid())
  name      String
  price     Float
  status    String     @default("Pending")
  user      Users      @relation(fields: [UserId], references: [userId])
  UserId    String
  products  Products[]
  orderDate DateTime
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Cart {
  cartId        String           @id @default(uuid())
  user          Users?
  products      Products[]
  CartToProduct cartAndProduct[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model cartAndProduct {
  id        String   @id @default(uuid())
  cart      Cart     @relation(fields: [cartId], references: [cartId])
  cartId    String
  product   Products @relation(fields: [productId], references: [productId])
  productId String
  quantity  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}
